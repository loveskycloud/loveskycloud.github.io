[{"id":"af75f19f5e37e35b530c04a4631135d3","title":"LeetCode-Hot-150","content":"LeetCode 热题150\n\n\n\n\n\n\n\n\n\n合并两个有序数组url: https://leetcode.cn/problems/merge-sorted-array/description/?envType=study-plan-v2&amp;envId=top-interview-150\n\ncppclass Solution &#123;\npublic:\n    void merge(vector&lt;int&gt;&amp; nums1, int m, vector&lt;int&gt;&amp; nums2, int n) &#123;\n        vector&lt;int&gt; arr(m + n);\n        int i = 0, j = 0, cur = 0;\n        while (i &lt; m &amp;&amp; j &lt; n) &#123;\n            if (nums1[i] &lt; nums2[j]) &#123;\n                arr[cur++] = nums1[i++];\n            &#125; else &#123;\n                arr[cur++] = nums2[j++];\n            &#125;\n        &#125;\n        while (i &lt; m) &#123;\n            arr[cur++] = nums1[i++];\n        &#125;\n        while (j &lt; n) &#123;\n            arr[cur++] = nums2[j++];\n        &#125;\n\n        nums1 = vector&lt;int&gt;(arr.begin(), arr.end());\n    &#125;\n&#125;;\n\n\n\n\n\n\n\n\n通过归并的思想解决了时间复杂度的问题，但是却额外开辟了m+n的空间复杂度，这里运用了从大到小归并的过程\ncppclass Solution &#123;\npublic:\n    void merge(vector&lt;int&gt;&amp; nums1, int m, vector&lt;int&gt;&amp; nums2, int n) &#123;\n        int cur = m + n - 1;\n        m -= 1;\n        n -= 1;\n        while (m &gt;= 0 &amp;&amp; n &gt;= 0) &#123;\n            if (nums1[m] &gt; nums2[n]) &#123;\n                nums1[cur--] = nums1[m--];\n            &#125; else &#123;\n                nums1[cur--] = nums2[n--];\n            &#125;\n        &#125;\n        while (m &gt;= 0) &#123;\n            nums1[cur--] = nums1[m--];\n        &#125;\n        while (n &gt;= 0) &#123;\n            nums1[cur--] = nums2[n--];\n        &#125;\n    &#125;\n&#125;;","slug":"LeetCode-Hot-150","date":"2024-05-26T10:07:13.000Z","categories_index":"","tags_index":"LeetCode","author_index":"skycloud"},{"id":"7f2f84c9b1e49e5ffdfd6e20ffe9fa41","title":"git tips","content":"Git Tipsstore passwordshellgit config --global credential.helper storemerge other branch commitshellgit cherry-pick commit","slug":"git-tips","date":"2024-05-25T18:02:44.000Z","categories_index":"","tags_index":"git","author_index":"skycloud"},{"id":"2d728caa47af746573cb7fba96b85d4f","title":"C++","content":"C++1.memory model","slug":"C++","date":"2024-05-25T17:10:03.000Z","categories_index":"","tags_index":"C++","author_index":"skycloud"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new postbash$ hexo new &quot;My New Post&quot;More info: Writing\nRun serverbash$ hexo serverMore info: Server\nGenerate static filesbash$ hexo generateMore info: Generating\nDeploy to remote sitesbash$ hexo deployMore info: Deployment\n","slug":"hello-world","date":"2024-05-25T16:55:45.690Z","categories_index":"","tags_index":"","author_index":"skycloud"},{"id":"89f090d163042fb67c88a9ccc294492f","title":"How to update glibc","content":"\n\n\n\n\n\n\n\n\nadd under code in sources.list\ntxtdeb http://security.debian.org/debian-security buster/updates main\n\n\n\n\n\n\n\n\nand \ntxtsudo apt update\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 112695A0E562B32A 54404762BBB6E853\nsudo apt install libc6-dev /sudo apt install libc6\nOK you get it\n\n","slug":"How-to-update-glibc","date":"2023-12-08T07:08:05.000Z","categories_index":"","tags_index":"","author_index":"skycloud"},{"id":"89f090d163042fb67c88a9ccc294492f","title":"How to update glibc","content":"\n\n\n\n\n\n\n\n\nadd under code in sources.list\ntxtdeb http://security.debian.org/debian-security buster/updates main\n\n\n\n\n\n\n\n\nand \ntxtsudo apt update\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 112695A0E562B32A 54404762BBB6E853\nsudo apt install libc6-dev /sudo apt install libc6\nOK you get it\n\n","slug":"how-to-update-glibc","date":"2023-12-08T07:08:05.000Z","categories_index":"","tags_index":"glibc","author_index":"skycloud"},{"id":"e8af7e97e8e6fb9e20a9d89ca13bf981","title":"Makefile","content":"目标\n\n\n\n\n\n\n\n\nmake 后面不跟目标默认执行第一个@为不显示该命令\ntxtall:\n    @echo &quot;hello world&quot;\n\ntest: \n    @echo &quot;hello test&quot;\n\n\n\n\n\n\n\n\nmake\ntxt    hello world依赖\n\n\n\n\n\n\n\n\n执行目标会先执行他的依赖\n\n依赖执行顺序从左到右\n\ntxtall: test\n    @echo &quot;hello world&quot;\ntest:\n    @echo &quot;hello test&quot;\n\n\n\n\n\n\n\n\nmake\ntxthello test\nhello world伪对象\n\n\n\n\n\n\n\n\n.PHONY: objectname\ntxt.PHONY: main\nall: main test\n    gcc -o simple  main.o test.o \nmain:\n    gcc -o main.o -c main.c\ntest:\n    gcc -o test.o -c test.c\nclean:\n    rm test.o main.o simple变量txt.PHONY: clean main\nRM = rm\nCC = gcc\nOBJS = main.o foo.o\nEXE = simple\n$&#123;EXE&#125;:$&#123;OBJS&#125;\n        $&#123;CC&#125; -o $&#123;EXE&#125; $&#123;OBJS&#125;\nfoo.o: foo.c\n        $&#123;CC&#125; -o foo.o -c foo.c\nmain.o: main.c\n        $&#123;CC&#125; -o main.o -c main.c\nclean:\n        $&#123;RM&#125; $&#123;EXE&#125; $&#123;OBJS&#125;\n自动变量txt.PHONY: clean main\nRM = rm\nCC = gcc\nEXE = simple\nSRCS = $&#123;wildcard *.c&#125;    &lt;!-- wildcard 通配符自动填入.c文件 --&gt;\nOBJS = $&#123;patsubst %.c, %.o, $&#123;SRCS&#125;&#125; &lt;!-- patsubst 将.c 替换为.o --&gt;\n$&#123;EXE&#125;:$&#123;OBJS&#125;\n    $&#123;CC&#125; -o $&#123;EXE&#125;  &amp;&#123;OBJS&#125;\nmain.o: main.c\n    $&#123;CC&#125; -o main.o -c main.c\nfoo.o: foo.c\n    $&#123;CC&#125; -o foo.o -c foo.c\nclean:\n    $&#123;RM&#125; $&#123;EXE&#125; $&#123;OBJS&#125;","slug":"Makefile","date":"2022-06-05T05:15:00.000Z","categories_index":"","tags_index":"","author_index":"skycloud"},{"id":"cc8f65cfba7ebf41b095e11d7b11d7e1","title":"go","content":"Hello worldgopackage main\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n    fmt.Println(&quot;Hello, World&quot;)\n&#125;\n\n\n\n\n\n\n\n\nRun this Program\ntxtgo run hello.go\n# or go build hello.go\n# ./hello","slug":"go","date":"2022-06-05T04:41:54.000Z","categories_index":"","tags_index":"","author_index":"skycloud"},{"id":"45b05c0adc7d6b51711d3e13e977b9ba","title":"hexo","content":"\n\n\n\n\n\n\n\n\nHexo 教程\ntxt    https://argvchs.github.io/2022/04/17/hexo-blog-2/","slug":"hexo","date":"2022-06-04T18:54:44.000Z","categories_index":"","tags_index":"","author_index":"skycloud"},{"id":"f2f5262edf1318560b27cb156964bbf3","title":"skynet","content":"How to learn skynet ?\n掌握框架是怎么解决问题的\n掌握框架的核心开发技能\n掌握框架的开发思路\n\n\n\n\n\n\n\n\nactor 并发模型  erlang从语言层面上，skynet 从框架上go 从语言层面上实现csp模型\n\n\n","slug":"skynet","date":"2022-06-04T09:05:01.000Z","categories_index":"","tags_index":"skynet","author_index":"skycloud"}]